name: Publish Docker image on every push to main branch

on:
  push:
    branches:
      - main

jobs:
  push_to_registry:
    name: Push Docker image to registry
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repo
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Will automatically make nice tags, see the table here https://github.com/docker/metadata-action#basic
      - name: Docker meta
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/blockscout/frontend

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Add SHORT_SHA env property with commit short sha
        run: echo "SHORT_SHA=`echo ${GITHUB_SHA} | cut -c1-8`" >> $GITHUB_ENV

      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./Dockerfile
          push: true
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          build-args: |
            GIT_COMMIT_SHA=${{ env.SHORT_SHA }}

  deploy_main:
    name: Deploy frontend
    needs: push_to_registry
    uses: blockscout/blockscout-ci-cd/.github/workflows/deploy_helmfile.yaml@master
    with:
      appName: front
      globalEnv: main
      helmfileDir: deploy
      kubeConfigSecret: ci/data/dev/kubeconfig/k8s-dev
      vaultRole: ci-dev
    secrets: inherit
  deploy_l2:
    name: Deploy frontend (L2)
    needs: push_to_registry
    uses: blockscout/blockscout-ci-cd/.github/workflows/deploy_helmfile.yaml@master
    with:
      appName: l2-optimism-goerli
      globalEnv: optimism-goerli
      helmfileDir: deploy
      kubeConfigSecret: ci/data/dev/kubeconfig/k8s-dev
      vaultRole: ci-dev
    secrets: inherit
